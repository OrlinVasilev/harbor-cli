name: Main and Pull Request Pipeline

on:
  push:
    branches: [main]
  pull_request:
    paths-ignore:
      - '*.md'
      - 'assets/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dagger Version
        uses: sagikazarmark/dagger-version-action@v0.0.1

      - name: Run Dagger golangci-lint
        uses: dagger/dagger-for-github@v6
        with:
          version: ${{ steps.dagger_version.outputs.version }}
          verb: call
          args: lint-report export --path=golangci-lint-report.sarif

      - uses: reviewdog/action-setup@v1
      - name: Run Reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |          
          reviewdog -f=sarif -name="Golang Linter Report" -reporter=github-check -filter-mode nofilter -fail-level any -tee < golangci-lint-report.sarif

  test-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  push-snapshop-release:
    if: github.event_name == 'push'
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dagger Version
        uses: sagikazarmark/dagger-version-action@v0.0.1

      - name: Published and Sign Sanpshot Image
        uses: dagger/dagger-for-github@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_ADDRESS: ${{ vars.REGISTRY_ADDRESS }}
          REGISTRY_USERNAME: ${{ vars.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          TAG: latest
        with:
          version: ${{ steps.dagger_version.outputs.version }}
          verb: call
          args: "publish-image-and-sign \
            --registry='${{ env.REGISTRY_ADDRESS }}' \
            --registry-username='${{ env.REGISTRY_USERNAME }}' \
            --registry-password=env:REGISTRY_PASSWORD \
            --image-tag='${{ env.TAG }}' \
            --github-token=env:GITHUB_TOKEN \
            --actions-id-token-request-url=$ACTIONS_ID_TOKEN_REQUEST_URL \
            --actions-id-token-request-token=env:ACTIONS_ID_TOKEN_REQUEST_TOKEN"
