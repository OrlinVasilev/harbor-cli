name: Main and Pull Request Pipeline

on:
  push:
    branches: [main]
  pull_request:
    paths-ignore:
      - '*.md'
      - 'assets/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dagger Version
        uses: sagikazarmark/dagger-version-action@v0.0.1

      - name: Run Dagger golangci-lint
        uses: dagger/dagger-for-github@v6
        with:
          version: ${{ steps.dagger_version.outputs.version }}
          verb: call
          args: lint-report export --path=golangci-lint-report.sarif

      - uses: reviewdog/action-setup@v1
      - name: Run Reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |          
          reviewdog -f=sarif -name="Golang Linter Report" -reporter=github-check -filter-mode nofilter -fail-level any -tee < golangci-lint-report.sarif

  test-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

#      - name: Run Tests
#        uses: dagger/dagger-for-github@v6
#        with:
#          version: ${{ steps.dagger_version.outputs.version }}
#          verb: call
#          args: test

#      - name: Build Binary
#        uses: dagger/dagger-for-github@v6
#        with:
#          version: ${{ steps.dagger_version.outputs.version }}
#          verb: call
#          args: build-dev --platform linux/amd64

  push-snapshop-release:
    permissions:
      contents: write
      packages: write
      issues: write
      id-token: write

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dagger Version
        uses: sagikazarmark/dagger-version-action@v0.0.1

      - name: Push Snapshot Release
        uses: dagger/dagger-for-github@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ steps.dagger_version.outputs.version }}
          verb: call
          args: snapshot-release --github-token=GITHUB_TOKEN
